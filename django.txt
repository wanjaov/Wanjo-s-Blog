VIRTUAL ENVIRONMENT
 - A django project requires a virtual environment to run locally , virtual environment help different projects within our pc be able to run on different dependency versions.

 CREATING A VIRTUAL ENVIRONMENT
 -In your project folder, open a git bach terminal
 -To create a virtual env we use the command:
   python -m env your project env
In this case 'your project env' will be the name you assign to the environment to be created for your project.This indicates that we add the suffix 'env' at during our projects virtual environment.
Example: If we have a project named ecommerce env as shown below:
   ~python -m venv ecommerceenv
Once we have created our projects ENVIRONMENT we wont recreate it every time we want to run the project we will just be using existing created environment. Also when we create the projects environment a folder is created with the environment

 1.Lib:Contains a list of all dependencies installed to the environment,
 ie every time we install a dependency it is added here.
 2.Scripts/bin: in windows we have scripts in other operating systems we will have bin.Here we will have an important file named 'activate' which
 we will be using to activate our environment, during the running of your project.We will also python files which we can use as our project interpreter.

 -->So creating a virtual environment is not enough, to be able to use it well within our project we must activate it.

 ACTIVATING AN ENVIRONMENT
 We use the following command:
    In windows git bash:
        ~source yourprojectenv/Scripts/activate
    in linux:
        ~source yourprojectenv/bin/activate

--> This is all we need to use our environment, in our project.So everytime we want to access a particular project and run it, we will first activate its environment.